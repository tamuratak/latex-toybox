--- ../tmp/pdfjs-3.10/web/viewer.js	2023-08-27 17:53:52.000000000 +0900
+++ viewer/viewer.js	2023-09-02 10:04:39.000000000 +0900
@@ -43,10 +43,10 @@
 exports.GenericCom = GenericCom;
 class GenericPreferences extends _preferences.BasePreferences {
   async _writeToStorage(prefObj) {
-    localStorage.setItem("pdfjs.preferences", JSON.stringify(prefObj));
+    // localStorage.setItem("pdfjs.preferences", JSON.stringify(prefObj));
   }
   async _readFromStorage(prefObj) {
-    return JSON.parse(localStorage.getItem("pdfjs.preferences"));
+    return // JSON.parse(localStorage.getItem("pdfjs.preferences"));
   }
 }
 class GenericExternalServices extends _app.DefaultExternalServices {
@@ -680,7 +680,7 @@
         title = url;
       }
     }
-    this.setTitle(title);
+    // this.setTitle(title);
   },
   setTitle(title = this._title) {
     this._title = title;
@@ -4889,7 +4889,7 @@
 };
 exports.FindState = FindState;
 const FIND_TIMEOUT = 250;
-const MATCH_SCROLL_OFFSET_TOP = -50;
+const MATCH_SCROLL_OFFSET_TOP = -100;
 const MATCH_SCROLL_OFFSET_LEFT = -400;
 const CHARACTERS_TO_NORMALIZE = {
   "\u2010": "-",
@@ -7489,7 +7489,7 @@
       this.#dispatchEvent();
       return;
     }
-    this.switchView(view, true);
+    this.switchView(view, false);
     if (!this.isInitialEventDispatched) {
       this.#dispatchEvent();
     }
@@ -8387,7 +8387,7 @@
     this.#annotationEditorMode = options.annotationEditorMode ?? _pdfjsLib.AnnotationEditorType.NONE;
     this.imageResourcesPath = options.imageResourcesPath || "";
     this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;
-    this.removePageBorders = options.removePageBorders || false;
+    this.removePageBorders = options.removePageBorders || true;
     if (options.useOnlyCssZoom) {
       console.error("useOnlyCssZoom was removed, please use `maxCanvasPixels = 0` instead.");
       options.maxCanvasPixels = 0;
@@ -12232,10 +12232,10 @@
   }
   async _writeToStorage() {
     const databaseStr = JSON.stringify(this.database);
-    localStorage.setItem("pdfjs.history", databaseStr);
+    // localStorage.setItem("pdfjs.history", databaseStr);
   }
   async _readFromStorage() {
-    return localStorage.getItem("pdfjs.history");
+    return // localStorage.getItem("pdfjs.history");
   }
   async set(name, val) {
     await this._initializedPromise;
@@ -13081,7 +13081,7 @@
   function getL10nData(key, args, fallback) {
     var data = gL10nData[key];
     if (!data) {
-      console.warn('#' + key + ' is undefined.');
+      // console.warn('#' + key + ' is undefined.');
       if (!fallback) {
         return null;
       }
@@ -13517,6 +13517,9 @@
 }
 window.addEventListener("keydown", function (event) {
   if (event.keyCode === 80 && (event.ctrlKey || event.metaKey) && !event.altKey && (!event.shiftKey || window.chrome || window.opera)) {
+    if (window.parent !== window) {
+      return;
+    }
     window.print();
     event.preventDefault();
     event.stopImmediatePropagation();
@@ -13789,7 +13792,7 @@
   try {
     parent.document.dispatchEvent(event);
   } catch (ex) {
-    console.error(`webviewerloaded: ${ex}`);
+    // console.error(`webviewerloaded: ${ex}`);
     document.dispatchEvent(event);
   }
   _app.PDFViewerApplication.run(config);
